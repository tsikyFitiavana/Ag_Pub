{"ast":null,"code":"// Authentication builds upon Krunal's guide:\n// https://appdividend.com/2018/07/18/react-redux-node-mongodb-jwt-authentication/#React_Redux_Node_MongoDB_JWT_Authentication\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from '../setAuthToken';\nimport { INDICATE_NO_ERRORS, GET_ERRORS, SET_CURRENT_USER } from './actionTypes';\nexport var registerUser = function registerUser(user) {\n  return function (dispatch) {\n    axios.post('/users/signup', user).then(function (res) {\n      dispatch({\n        type: INDICATE_NO_ERRORS,\n        payload: {\n          success: true\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    axios.post('/users/login', user).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      var decoded = jwtDecode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var updateCurrentUser = function updateCurrentUser(avatarColor, bio, email, name, userId, showEmail) {\n  return function (dispatch) {\n    return axios.patch(\"/users/\".concat(userId), {\n      avatarColor: avatarColor,\n      bio: bio,\n      email: email,\n      name: name,\n      showEmail: showEmail\n    }).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      var decoded = jwtDecode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    window.location.href = '/login';\n  };\n};","map":{"version":3,"sources":["/home/dev/Bureau/Ag_Pub/agFront/src/actions/authClientsActions.js"],"names":["axios","jwtDecode","setAuthToken","INDICATE_NO_ERRORS","GET_ERRORS","SET_CURRENT_USER","registerUser","user","dispatch","post","then","res","type","payload","success","catch","err","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","updateCurrentUser","avatarColor","bio","email","name","userId","showEmail","patch","console","log","logoutUser","removeItem","window","location","href"],"mappings":"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","sourcesContent":["// Authentication builds upon Krunal's guide:\n// https://appdividend.com/2018/07/18/react-redux-node-mongodb-jwt-authentication/#React_Redux_Node_MongoDB_JWT_Authentication\n\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from '../setAuthToken';\nimport {\n  INDICATE_NO_ERRORS,\n  GET_ERRORS,\n  SET_CURRENT_USER\n} from './actionTypes';\n\nexport const registerUser = user => (dispatch) => {\n  axios\n    .post('/users/signup', user)\n    .then((res) => {\n      dispatch({\n        type: INDICATE_NO_ERRORS,\n        payload: {\n          success: true\n        }\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const loginUser = user => (dispatch) => {\n  axios\n    .post('/users/login', user)\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      const decoded = jwtDecode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const setCurrentUser = decoded => ({\n  type: SET_CURRENT_USER,\n  payload: decoded\n});\n\nexport const updateCurrentUser = (\n  avatarColor,\n  bio,\n  email,\n  name,\n  userId,\n  showEmail\n) => dispatch =>\n  axios\n    .patch(`/users/${userId}`, { avatarColor, bio, email, name, showEmail })\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      const decoded = jwtDecode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => console.log(err));\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.href = '/login';\n};\n"]},"metadata":{},"sourceType":"module"}